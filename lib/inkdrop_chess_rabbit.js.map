{"version":3,"file":"inkdrop_chess_rabbit.js","names":["module","exports","activate","console","log","inkdrop","isEditorActive","handleEvent","bind","getActiveEditor","global","onEditorLoad","deactivate","cm","off","functionOnDrop","editor","codeMirrorInstance","mde","commands","add","wrapper","event","detail","possiblePgnFile","files","test","type","stopPropagation","insertPgn","on","pgnFile","dataTransfer","fileReader","FileReader","addEventListener","importPgn","result","readAsText","cursorPosition","getCursor","pgnContents","lichessPastedGame","fetch","method","headers","body","URLSearchParams","pgn","replaceSelection","url","dispatch","document","pos","line","ch"],"sources":["../source/inkdrop_chess_rabbit.ts"],"sourcesContent":["// import { iframe } from \"electron\";\n// import { markdownRenderer } from \"inkdrop\";\n\n// inkdrop.onEditorLoad(() => {\n//     const mde = inkdrop.getActiveEditor();\n//     inkdrop.commands.add(mde.wrapper.wrapper, {\n//         \"editor:insert-images\": (e) => {\n//             const { files } = e;\n//             console.log(\"files dropped:\", e);\n\n//             e.stopPropagation();\n//         },\n//     });\n// });\n\nmodule.exports = {\n    activate() {\n        console.log(\"Chess Rabbit ready to run ...\");\n        if (inkdrop.isEditorActive()) {\n            this.handleEvent.bind(this)(inkdrop.getActiveEditor());\n        } else {\n            global.inkdrop.onEditorLoad(this.handleEvent.bind(this));\n        }\n    },\n\n    deactivate() {\n        inkdrop.getActiveEditor().cm.off(\"drop\", this.functionOnDrop);\n    },\n\n    handleEvent(editor) {\n        const codeMirrorInstance = editor.cm;\n        const mde = inkdrop.getActiveEditor();\n        inkdrop.commands.add(mde.wrapper.wrapper, {\n            \"editor:insert-images\": (event) => {\n                const { detail } = event;\n                const [possiblePgnFile] = detail.files;\n                if (!/image/.test(possiblePgnFile.type)) {\n                    event.stopPropagation();\n                }\n                // debugger;\n            },\n        });\n\n        this.functionOnDrop = this.insertPgn.bind(this);\n\n        codeMirrorInstance.on(\"drop\", this.functionOnDrop);\n    },\n\n    async insertPgn(codeMirrorInstance, event) {\n        const [pgnFile] = event.dataTransfer.files;\n        const fileReader = new FileReader();\n\n        fileReader.addEventListener(\n            \"load\",\n            async () => {\n                await this.importPgn(\n                    pgnFile,\n                    fileReader.result,\n                    codeMirrorInstance\n                );\n            },\n            false\n        );\n\n        fileReader.readAsText(pgnFile);\n\n        const cursorPosition = codeMirrorInstance.getCursor();\n\n        // HACK: When the editor is opened in a separate window, delete inserted URL.\n        // cm.replaceSelection(\"\");\n\n        // inkdrop.commands.dispatch(document.body, \"editor:insert-images\", {\n        //     pos: {\n        //         line: cursorPosition.line,\n        //         ch: cursorPosition.ch,\n        //     },\n        //     files: [pgnContents],\n        // });\n    },\n\n    async importPgn(pgnFile, pgnContents, codeMirrorInstance) {\n        const lichessPastedGame = await fetch(\n            \"https://lichess.org/api/import\",\n            {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\n                },\n                body: new URLSearchParams({ pgn: pgnContents }),\n            }\n        );\n\n        codeMirrorInstance.replaceSelection(lichessPastedGame.url);\n        inkdrop.commands.dispatch(document.body, \"editor:insert-images\", {\n            pos: {\n                line: cursorPosition.line,\n                ch: cursorPosition.ch,\n            },\n            files: [pgnFile],\n        });\n    },\n};\n"],"mappings":"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","ignoreList":[]}