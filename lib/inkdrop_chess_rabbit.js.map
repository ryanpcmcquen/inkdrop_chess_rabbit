{"version":3,"file":"inkdrop_chess_rabbit.js","names":["module","exports","config","ApiKey","title","type","description","default","activate","console","log","inkdrop","isEditorActive","mde","getActiveEditor","commands","add","wrapper","event","detail","possiblePgnFile","files","fileType","test","preventDefault","stopPropagation","handleEvent","bind","global","onEditorLoad","deactivate","cm","off","functionOnDrop","editor","codeMirrorInstance","insertPgn","on","pgnFile","dataTransfer","fileReader","FileReader","addEventListener","importPgn","result","readAsText","pgnContents","apiKey","get","myHeaders","Headers","append","lichessPastedGame","fetch","method","headers","body","URLSearchParams","pgn","ok","cursorPosition","getCursor","gameId","url","split","pop","replaceSelection","join"],"sources":["../source/inkdrop_chess_rabbit.ts"],"sourcesContent":["\"use babel\";\nimport { Inkdrop } from \"./types\";\n// import { Auth } from \"./auth\";\n\ndeclare const inkdrop: Inkdrop;\n\nmodule.exports = {\n    config: {\n        ApiKey: {\n            title: \"API Key\",\n            type: \"string\",\n            description:\n                \"Generate an API Key for Chess Rabbit by clicking the link in the README below (you must be signed in).\",\n            default: \"\",\n        },\n    },\n\n    activate() {\n        console.log(\"The Chess Rabbit is ready to run ...\");\n        // console.log(\n        //     `Your API Key is set to: ${inkdrop.config.get(\n        //         \"chess_rabbit.ApiKey\"\n        //     )}`\n        // );\n\n        if (inkdrop.isEditorActive()) {\n            const mde = inkdrop.getActiveEditor();\n            inkdrop.commands.add(mde.wrapper.wrapper, {\n                \"editor:insert-images\": (event) => {\n                    const { detail } = event;\n                    const [possiblePgnFile] = detail.files;\n                    const fileType = possiblePgnFile.type;\n                    if (!/image/.test(fileType)) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        return false;\n                    }\n                },\n            });\n\n            this.handleEvent.bind(this)(inkdrop.getActiveEditor());\n        } else {\n            global.inkdrop.onEditorLoad(this.handleEvent.bind(this));\n        }\n    },\n\n    deactivate() {\n        inkdrop.getActiveEditor().cm.off(\"drop\", this.functionOnDrop);\n    },\n\n    handleEvent(editor) {\n        const codeMirrorInstance = editor.cm;\n        this.functionOnDrop = this.insertPgn.bind(this);\n\n        codeMirrorInstance.on(\"drop\", this.functionOnDrop);\n    },\n\n    async insertPgn(codeMirrorInstance, event) {\n        const [pgnFile] = event.dataTransfer.files;\n        const fileReader = new FileReader();\n\n        fileReader.addEventListener(\n            \"load\",\n            async () => {\n                await this.importPgn(\n                    pgnFile,\n                    fileReader.result,\n                    codeMirrorInstance\n                );\n            },\n            false\n        );\n\n        fileReader.readAsText(pgnFile);\n    },\n\n    async importPgn(pgnFile, pgnContents, codeMirrorInstance) {\n        const apiKey = inkdrop.config.get(\"chess_rabbit.ApiKey\");\n\n        const myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n        if (apiKey) {\n            myHeaders.append(\"Authorization\", `Bearer ${apiKey}`);\n        }\n\n        const lichessPastedGame = await fetch(\n            \"https://lichess.org/api/import\",\n            {\n                method: \"POST\",\n                headers: myHeaders,\n                body: new URLSearchParams({ pgn: pgnContents }),\n            }\n        );\n        if (lichessPastedGame.ok) {\n            // console.log(\n            //     `Your API Key is set to: ${inkdrop.config.get(\n            //         \"chess_rabbit.ApiKey\"\n            //     )}`\n            // );\n            const cursorPosition = codeMirrorInstance.getCursor();\n            const gameId = lichessPastedGame.url.split(\"/\").pop();\n            console.log(`The Lichess game ID is: ${gameId}`);\n            codeMirrorInstance.replaceSelection(\n                [\n                    lichessPastedGame.url,\n                    // \"```pgn\",\n                    // pgnContents,\n                    // \"```\",\n                    // The iframe loads successfully, but\n                    // some interactions are broken.\n                    `<iframe src=\"https://lichess.org/embed/game/${gameId}?theme=auto&bg=auto\" width=600 height=397 frameborder=0></iframe>`,\n                    // `![${gameId} gif](https://lichess1.org/game/export/gif/${gameId}.gif)`,\n                ].join(\"\\n\\n\")\n            );\n        }\n    },\n};\n"],"mappings":"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","ignoreList":[]}